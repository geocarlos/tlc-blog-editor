{"version":3,"sources":["constants.ts","api/api.ts","components/Authenticator.tsx","components/CategoryEditor.tsx","components/Editor.tsx","components/List.tsx","components/Routes.tsx","App.tsx","reportWebVitals.ts","web-components/components.ts","index.tsx"],"names":["API_BASE_URL","fetchCategories","axios","get","then","response","data","catch","error","interceptors","request","use","url","includes","Auth","currentSession","headers","Authorization","getIdToken","getJwtToken","console","log","useStyles","makeStyles","auth","width","height","margin","display","flexWrap","alignItems","border","borderRadius","padding","authForm","Authenticator","classes","useState","username","password","state","setState","setIsLoggedIn","useContext","AppContext","handleChange","target","prev","name","value","className","onSubmit","event","preventDefault","signIn","TextField","onChange","label","type","Button","variant","color","categoryEditor","position","background","top","left","justifyContent","CategoryEditor","language","setName","setCategories","e","onClick","content","post","editor","gridTemplateColumns","minHeight","columnGap","column","bodyInput","categories","overflow","languages","Editor","editorRef","useRef","uri","title","body","category","author","showCatEdit","setShowCatEdit","selectedPost","useEffect","innerText","toLocaleLowerCase","replace","createdAt","Date","getTime","window","location","reload","style","map","lang","filter","cat","ref","onMouseUp","current","getSelection","toString","initialValue","contentEditable","onInput","size","postList","alignSelf","postItem","List","posts","setSelectedPost","history","useHistory","push","right","bottom","ProtectedRoute","isLoggedIn","roles","path","userRoles","C","component","rest","some","role","render","props","to","Routes","exact","createContext","Amplify","configure","mandatorySignIn","region","userPoolId","userPoolWebClientId","App","setPosts","currentAuthenticatedUser","signOut","basename","process","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","webComponents","PostBody","this","innerHTML","HTMLElement","customElements","define","PostBodyEdit","oldValue","newValue","getAttribute","TextInput","classList","add","textContent","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd74751.chunk.js","sourcesContent":["export const API_BASE_URL = 'https://perz1z7tlf.execute-api.us-east-2.amazonaws.com/prod/api/v1';\r\nexport const AWS_REGION = 'us-east-2';\r\nexport const USER_POOL_ID = 'us-east-2_M7RE4lOGi';\r\nexport const APP_CLIENT_ID = '2994454dd3jst6ttbitov25399';","import { API_BASE_URL } from '../constants';\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\nimport { Auth } from 'aws-amplify';\r\n\r\nexport const fetchPosts = () => {\r\n    return axios.get(`${API_BASE_URL}/posts`)\r\n    .then(response => response.data)\r\n    .catch(error => error.data);\r\n}\r\n\r\nexport const createPost = (content: any) => {\r\n    return axios.post(`${API_BASE_URL}/posts`, content)\r\n    .then(response => response.data)\r\n    .catch(error => error.data);\r\n}\r\n\r\nexport const fetchCategories = () => {\r\n    return axios.get(`${API_BASE_URL}/posts/categories`)\r\n    .then(response => response.data)\r\n    .catch(error => error.data);\r\n}\r\n\r\nexport const createCategory = (content: any) => {\r\n    return axios.post(`${API_BASE_URL}/posts/categories`, content)\r\n    .then(response => response.data)\r\n    .catch(error => error.data);\r\n}\r\n\r\naxios.interceptors.request.use((request: AxiosRequestConfig) => {\r\n    if (request.url && !request.url.includes(API_BASE_URL)) {\r\n        return request;\r\n    }\r\n\r\n    return Auth.currentSession()\r\n    .then(data => {\r\n        request.headers.Authorization = `Bearer ${data.getIdToken().getJwtToken()}`;\r\n        return request;\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n        return request;\r\n    })\r\n})","import { Button, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\n\r\nconst useStyles = makeStyles({\r\n    auth: {\r\n        width: '20rem',\r\n        height: '20rem',\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        border: 'solid thin #999',\r\n        borderRadius: '1rem',\r\n        padding: '1rem'\r\n    },\r\n    authForm: {\r\n        width: '90%',\r\n        margin: 'auto',\r\n        '& .input': {\r\n            height: 'fit-content',\r\n            width: '100%',\r\n            margin: '1rem 0'\r\n        }\r\n    }\r\n})\r\n\r\nconst Authenticator = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const { setIsLoggedIn } = useContext(AppContext);\r\n\r\n    const handleChange = ({ target }: any) => {\r\n        setState(prev => ({ ...prev, [target.name]: target.value }));\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        Auth.signIn(state.username, state.password)\r\n            .then(() => setIsLoggedIn(true))\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.auth}>\r\n            <form onSubmit={handleSubmit} className={classes.authForm}>\r\n                <div className=\"input\">\r\n                    <TextField onChange={handleChange} name=\"username\" label=\"Username\" type=\"email\" className=\"input\" />\r\n                </div>\r\n                <div className=\"input\">\r\n                    <TextField onChange={handleChange} name=\"password\" label=\"Password\" type=\"password\" className=\"input\" />\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authenticator;","import { Button, makeStyles, TextField } from \"@material-ui/core\"\r\nimport { useContext, useState } from \"react\";\r\nimport { createCategory, fetchCategories } from \"../api/api\";\r\nimport { AppContext } from \"../App\";\r\n\r\nconst useStyles = makeStyles({\r\n    categoryEditor: {\r\n        position: 'absolute',\r\n        background: 'white',\r\n        top: '-100%',\r\n        left: '100%',\r\n        height: '10rem',\r\n        width: '20rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n});\r\n\r\nconst CategoryEditor = ({language}: any) => {\r\n    const [name, setName] = useState('');\r\n    const {setCategories} = useContext(AppContext);\r\n    const classes = useStyles();\r\n\r\n    const handleClick = () => {\r\n        createCategory({name, language})\r\n        .then(() => {\r\n            fetchCategories()\r\n            .then(data => setCategories(data))\r\n            .catch(error => console.log(error));\r\n        })\r\n        .catch(error => console.log(error));\r\n\r\n    }\r\n    return (\r\n        <div className={classes.categoryEditor}>\r\n            <TextField label=\"name\" value={name} onChange={e => setName(e.target.value)} />\r\n            <Button onClick={handleClick}>Save</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryEditor;","import { Button, makeStyles, TextField } from \"@material-ui/core\"\r\nimport { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { createPost } from \"../api/api\";\r\nimport { AppContext } from \"../App\";\r\nimport CategoryEditor from \"./CategoryEditor\";\r\n\r\nconst useStyles = makeStyles({\r\n    editor: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '50% 50%',\r\n        width: '90%',\r\n        minHeight: '90%',\r\n        margin: 'auto',\r\n        columnGap: '1.5rem'\r\n    },\r\n    column: {\r\n        width: '100%'\r\n    },\r\n    bodyInput: {\r\n        minHeight: '10rem',\r\n        width: '100%',\r\n        background: '#eee'\r\n    },\r\n    categories: {\r\n        display: 'inline',\r\n        width: 'fit-content',\r\n        position: 'relative',\r\n        overflow: 'visible'\r\n    }\r\n});\r\n\r\nconst languages = [\r\n    {label: 'English', value: 'en'},\r\n    {label: 'Português', value: 'pt'}\r\n]\r\n\r\nconst Editor = () => {\r\n    const classes = useStyles();\r\n    const editorRef = useRef();\r\n    const [state, setState] = useState({\r\n        uri: '',\r\n        title: '',\r\n        body: '',\r\n        language: 'en',\r\n        category: '',\r\n        author: ''\r\n    });\r\n    const [showCatEdit, setShowCatEdit] = useState(false);\r\n\r\n    const {selectedPost: post, categories} = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        if (!post) {\r\n            return;\r\n        }\r\n        setState(post);\r\n    }, [post])\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const uri = state.uri ? state.uri : state.title.toLocaleLowerCase().replace(/\\s/g, '-');\r\n        createPost({...state, uri, createdAt: post.createdAt || new Date().getTime()})\r\n        .then(() => {\r\n            window.location.reload();\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    const handleChange = ({target}: any) => {\r\n        if (!target.name) {\r\n            setState(prev => ({...prev, body: target.innerText}))\r\n        }\r\n        setState(prev => ({...prev, [target.name]: target.value}))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.editor}>\r\n            <div className={classes.column}>\r\n            <h2>New Post</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField label=\"title\" name=\"title\" value={state.title} onChange={handleChange} style={{\r\n                    margin: '1rem 0',\r\n                    width: '100%'\r\n                }} />\r\n                <select value={state.language} onChange={handleChange} name=\"language\" >\r\n                    {languages.map(lang => (<option key={lang.value} value={lang.value}>{lang.label}</option>))}\r\n                </select>\r\n                <div className={classes.categories}>\r\n                    <select value={state.category} onChange={handleChange} name=\"category\" >\r\n                        {categories.filter((cat: any) => cat.language === state.language).map((cat:any) => (\r\n                            <option key={cat.name} value={cat.name}>{cat.name}</option>\r\n                        ))} \r\n                    </select>\r\n                    <Button onClick={() => setShowCatEdit(prev => !prev)}>{showCatEdit ? 'Close' : 'Add Category'}</Button>\r\n                    {showCatEdit && <CategoryEditor language={state.language}/>}\r\n                </div>\r\n                <text-input ref={editorRef} onMouseUp={() => {\r\n                    if (editorRef && editorRef.current) {\r\n                        const el: any = editorRef.current;\r\n                        console.log(window.getSelection()?.toString());\r\n                    }\r\n                }} className={classes.bodyInput} initialValue={post?.body} contentEditable onInput={handleChange}/>\r\n                <div style={{padding: '1rem 0'}}>\r\n                    <Button size=\"small\" variant=\"contained\" type=\"submit\">Save</Button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n            <div className={classes.column}>\r\n                <post-body-edit body={state.body}></post-body-edit>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor;","import { Button, makeStyles } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppContext } from \"../App\";\r\n\r\nconst useStyles = makeStyles({\r\n    postList: {\r\n        width: '90%',\r\n        minHeight: '90%',\r\n        margin: '0 auto',\r\n        alignSelf: 'flex-start'\r\n    },\r\n    postItem: {\r\n        margin: '.5rem 0',\r\n        padding: '1rem',\r\n        border: 'solid thin grey'\r\n    }\r\n})\r\n\r\nconst List = () => {\r\n    const classes = useStyles();\r\n    const { posts, setSelectedPost } = useContext(AppContext);\r\n    const history = useHistory();\r\n    return (\r\n        <div className={classes.postList}>\r\n        <h1>All Posts</h1>\r\n        {posts.map((post: any) => (\r\n            <div className={classes.postItem} key={post.title} onClick={() => {\r\n                setSelectedPost(post);\r\n                history.push('/editor');\r\n            }}>\r\n                <h2>{post.title}</h2>\r\n                <post-body>\r\n                    {post.body}\r\n                </post-body>\r\n            </div>\r\n        ))}\r\n        <div style={{\r\n            position: 'fixed',\r\n            right: '5rem',\r\n            bottom: '1rem'\r\n        }}>\r\n            <Button onClick={() => {\r\n                history.push('/editor');\r\n                setSelectedPost(null);\r\n            }}>New post</Button>\r\n        </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default List;","import { Redirect, Route, RouteProps, Switch } from 'react-router-dom';\r\nimport Authenticator from './Authenticator';\r\nimport Editor from './Editor';\r\nimport List from './List';\r\n\r\ninterface IRoutes extends RouteProps {\r\n    isLoggedIn: boolean;\r\n    userRoles: Array<string>;\r\n}\r\n\r\ninterface IProtectedRoute extends RouteProps {\r\n    isLoggedIn: boolean;\r\n    roles: Array<string>;\r\n    userRoles: Array<string>\r\n}\r\n\r\nconst ProtectedRoute = ({ isLoggedIn, roles, path, userRoles, component: C, ...rest }: IProtectedRoute) => {\r\n    if (isLoggedIn && roles.some(role => userRoles.includes(role))) {\r\n        return <Route render={props => C && <C {...props} />} {...rest} />\r\n    } else {\r\n        return <Route path={path} render={() => (\r\n            isLoggedIn ? <h1>YOU ARE NOT ALLOWED TO SEE THE PAGE!</h1> : \r\n            <Redirect to=\"/login\"/>\r\n        )} {...rest} /> \r\n    }\r\n}\r\n\r\nconst Routes = ({ isLoggedIn, userRoles }: IRoutes) => {\r\n    return <Switch>\r\n        <ProtectedRoute \r\n            exact path=\"/\" component={List}\r\n            isLoggedIn={isLoggedIn} \r\n            userRoles={userRoles} roles={['BlogAuthor']} />\r\n        <ProtectedRoute \r\n            exact path=\"/editor\" component={Editor}\r\n            isLoggedIn={isLoggedIn} \r\n            userRoles={userRoles} roles={['BlogAuthor']} />\r\n        <Route path=\"/login\" render={() => {\r\n                return isLoggedIn ? <Redirect to=\"/\" /> : <Authenticator />\r\n            }} />\r\n    </Switch>\r\n}\r\n\r\nexport default Routes;","import { createContext, useEffect, useState } from \"react\";\r\nimport { Amplify, Auth } from 'aws-amplify';\r\nimport { AWS_REGION, USER_POOL_ID, APP_CLIENT_ID } from './constants';\r\nimport { fetchCategories, fetchPosts } from \"./api/api\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Routes from \"./components/Routes\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nexport const AppContext = createContext({} as any);\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    mandatorySignIn: true,\r\n    region: AWS_REGION,\r\n    userPoolId: USER_POOL_ID,\r\n    userPoolWebClientId: APP_CLIENT_ID\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState<any>(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean | null>(null);\r\n\r\n  useEffect(() => {\r\n    Auth.currentAuthenticatedUser()\r\n      .then(() => setIsLoggedIn(true))\r\n      .catch(error => {\r\n        console.log(error)\r\n        setIsLoggedIn(false);\r\n      });\r\n  }, [])\r\n\r\n  const signOut = () => {\r\n    Auth.signOut()\r\n      .then(() => setIsLoggedIn(false))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      return;\r\n    }\r\n    fetchPosts()\r\n      .then((data: any) => {\r\n        setPosts(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    fetchCategories()\r\n      .then((data: any) => {\r\n        setCategories(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [isLoggedIn])\r\n\r\n  return isLoggedIn !== null ? (\r\n    <div className=\"container\">\r\n      {isLoggedIn && (\r\n      <header className=\"header\">\r\n        <Button style={{height: 'fit-content'}} onClick={signOut}>Log out</Button>\r\n      </header>)}\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <AppContext.Provider value={{setIsLoggedIn, posts, categories, selectedPost, setSelectedPost, setCategories}}>\r\n          <Routes isLoggedIn={isLoggedIn} userRoles={['BlogAuthor']} />\r\n        </AppContext.Provider>\r\n      </BrowserRouter>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const webComponents = () => {\r\n    class PostBody extends HTMLElement {\r\n        connectedCallback() {\r\n            const content = this.innerText.replace(/<script>|<script src=(\"|').*(\"|')(\\s+|)>/g, '&lt;script&gt;')\r\n            .replace(/<\\/script>/g, '&lt;/script&gt;');\r\n            this.innerHTML = content;\r\n        }\r\n\r\n    }\r\n    window.customElements.define('post-body', PostBody);\r\n\r\n    class PostBodyEdit extends HTMLElement {\r\n        static get observedAttributes() {\r\n            return ['body'];\r\n        }\r\n\r\n        attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n            if (name === 'body' && oldValue !== newValue) {\r\n                const body = this.getAttribute('body');\r\n                const content = body?.replace(/<script>|<script src=(\"|').*(\"|')(\\s+|)>/g, '&lt;script&gt;')\r\n                .replace(/<\\/script>/g, '&lt;/script&gt;');\r\n                this.innerHTML = content || '';\r\n            }\r\n        }\r\n\r\n    }\r\n    window.customElements.define('post-body-edit', PostBodyEdit);\r\n\r\n    class TextInput extends HTMLElement {\r\n        static get observedAttributes() {\r\n            return ['initialValue', 'className'];\r\n        }\r\n\r\n        connectedCallback() {\r\n            const value = this.getAttribute('initialValue');\r\n            const className = this.getAttribute('className');\r\n            if (className) {\r\n                this.classList.add(className);\r\n            }\r\n            this.style.display = 'block';\r\n            this.textContent = value;\r\n        }\r\n\r\n    }\r\n    window.customElements.define('text-input', TextInput);\r\n}\r\n\r\nexport default webComponents;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport webComponents from './web-components/components';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nwebComponents();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}